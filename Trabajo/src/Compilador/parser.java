
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Tue Jul 10 09:38:50 COT 2012
//----------------------------------------------------

package Compilador;

import java.io.*;
import java_cup.runtime.*;

/** CUP v0.10k generated parser.
  * @version Tue Jul 10 09:38:50 COT 2012
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\226\000\002\020\010\000\002\002\004\000\002\020" +
    "\011\000\002\020\010\000\002\020\006\000\002\020\007" +
    "\000\002\020\003\000\002\026\006\000\002\026\006\000" +
    "\002\030\004\000\002\030\003\000\002\031\005\000\002" +
    "\031\005\000\002\031\005\000\002\031\006\000\002\031" +
    "\006\000\002\031\006\000\002\032\004\000\002\032\003" +
    "\000\002\033\004\000\002\011\004\000\002\011\003\000" +
    "\002\012\011\000\002\012\003\000\002\013\003\000\002" +
    "\013\003\000\002\003\004\000\002\003\003\000\002\004" +
    "\012\000\002\004\013\000\002\004\013\000\002\004\012" +
    "\000\002\004\017\000\002\004\020\000\002\004\016\000" +
    "\002\004\016\000\002\004\015\000\002\004\016\000\002" +
    "\004\016\000\002\004\017\000\002\004\020\000\002\004" +
    "\015\000\002\004\016\000\002\004\016\000\002\004\014" +
    "\000\002\004\011\000\002\004\012\000\002\004\013\000" +
    "\002\004\013\000\002\004\011\000\002\004\013\000\002" +
    "\004\012\000\002\004\012\000\002\004\011\000\002\004" +
    "\012\000\002\004\012\000\002\004\010\000\002\004\011" +
    "\000\002\004\003\000\002\040\004\000\002\040\003\000" +
    "\002\041\012\000\002\041\011\000\002\041\012\000\002" +
    "\041\013\000\002\041\013\000\002\041\014\000\002\041" +
    "\016\000\002\041\017\000\002\041\017\000\002\041\016" +
    "\000\002\041\016\000\002\041\015\000\002\041\015\000" +
    "\002\041\016\000\002\041\016\000\002\041\015\000\002" +
    "\041\015\000\002\041\016\000\002\041\017\000\002\041" +
    "\020\000\002\041\020\000\002\041\016\000\002\041\017" +
    "\000\002\041\020\000\002\041\020\000\002\041\017\000" +
    "\002\041\012\000\002\041\013\000\002\041\013\000\002" +
    "\041\011\000\002\041\013\000\002\041\012\000\002\041" +
    "\012\000\002\041\011\000\002\041\012\000\002\041\012" +
    "\000\002\041\010\000\002\041\011\000\002\023\004\000" +
    "\002\023\003\000\002\024\011\000\002\024\010\000\002" +
    "\024\004\000\002\036\004\000\002\036\003\000\002\037" +
    "\003\000\002\037\003\000\002\025\005\000\002\025\005" +
    "\000\002\025\007\000\002\025\007\000\002\025\007\000" +
    "\002\025\007\000\002\025\010\000\002\025\010\000\002" +
    "\025\010\000\002\025\010\000\002\034\004\000\002\034" +
    "\003\000\002\035\004\000\002\035\004\000\002\005\005" +
    "\000\002\005\005\000\002\005\005\000\002\005\005\000" +
    "\002\006\003\000\002\006\003\000\002\006\003\000\002" +
    "\006\003\000\002\006\003\000\002\006\003\000\002\007" +
    "\003\000\002\007\003\000\002\007\003\000\002\007\003" +
    "\000\002\014\007\000\002\015\005\000\002\016\005\000" +
    "\002\017\004\000\002\017\007\000\002\017\007\000\002" +
    "\010\004\000\002\010\003\000\002\010\004\000\002\010" +
    "\003\000\002\022\003\000\002\022\003\000\002\022\003" +
    "\000\002\022\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0146\000\006\003\005\014\006\001\002\000\012\003" +
    "\uffec\014\uffec\020\uffec\021\uffec\001\002\000\014\002\ufffb" +
    "\003\uffea\014\uffea\020\uffea\021\uffea\001\002\000\004\015" +
    "\u0141\001\002\000\012\003\014\014\006\020\015\021\016" +
    "\001\002\000\004\002\011\001\002\000\004\002\000\001" +
    "\002\000\012\003\uffed\014\uffed\020\uffed\021\uffed\001\002" +
    "\000\004\051\025\001\002\000\012\003\uffea\014\uffea\020" +
    "\uffea\021\uffea\001\002\000\004\007\022\001\002\000\004" +
    "\007\017\001\002\000\004\010\020\001\002\000\004\031" +
    "\021\001\002\000\004\051\ufff9\001\002\000\004\010\023" +
    "\001\002\000\004\031\024\001\002\000\004\051\ufffa\001" +
    "\002\000\012\046\032\047\033\050\027\052\026\001\002" +
    "\000\004\002\ufffd\001\002\000\004\053\u013d\001\002\000" +
    "\026\003\061\004\055\013\051\022\064\037\062\046\032" +
    "\047\033\050\027\052\056\053\052\001\002\000\026\003" +
    "\ufff7\004\ufff7\013\ufff7\022\ufff7\037\ufff7\046\ufff7\047\ufff7" +
    "\050\ufff7\052\ufff7\053\ufff7\001\002\000\004\053\044\001" +
    "\002\000\004\053\034\001\002\000\006\030\035\031\036" +
    "\001\002\000\004\053\043\001\002\000\026\003\ufff6\004" +
    "\ufff6\013\ufff6\022\ufff6\037\ufff6\046\ufff6\047\ufff6\050\ufff6" +
    "\052\ufff6\053\ufff6\001\002\000\006\030\uffef\031\uffef\001" +
    "\002\000\006\030\035\031\041\001\002\000\026\003\ufff3" +
    "\004\ufff3\013\ufff3\022\ufff3\037\ufff3\046\ufff3\047\ufff3\050" +
    "\ufff3\052\ufff3\053\ufff3\001\002\000\006\030\ufff0\031\ufff0" +
    "\001\002\000\006\030\uffee\031\uffee\001\002\000\006\030" +
    "\035\031\045\001\002\000\026\003\ufff5\004\ufff5\013\ufff5" +
    "\022\ufff5\037\ufff5\046\ufff5\047\ufff5\050\ufff5\052\ufff5\053" +
    "\ufff5\001\002\000\006\030\035\031\047\001\002\000\026" +
    "\003\ufff2\004\ufff2\013\ufff2\022\ufff2\037\ufff2\046\ufff2\047" +
    "\ufff2\050\ufff2\052\ufff2\053\ufff2\001\002\000\026\003\ufff8" +
    "\004\ufff8\013\ufff8\022\ufff8\037\ufff8\046\ufff8\047\ufff8\050" +
    "\ufff8\052\ufff8\053\ufff8\001\002\000\004\007\u0130\001\002" +
    "\000\004\006\u011a\001\002\000\014\003\uffe6\004\uffe6\013" +
    "\uffe6\037\uffe6\052\uffe6\001\002\000\014\003\061\004\055" +
    "\013\051\037\062\052\u0119\001\002\000\004\007\351\001" +
    "\002\000\004\002\ufffc\001\002\000\020\003\061\004\055" +
    "\013\051\022\064\037\062\052\346\053\052\001\002\000" +
    "\020\003\uff9d\004\uff9d\013\uff9d\022\uff9d\037\uff9d\052\uff9d" +
    "\053\uff9d\001\002\000\014\003\uffc7\004\uffc7\013\uffc7\037" +
    "\uffc7\052\uffc7\001\002\000\004\007\103\001\002\000\004" +
    "\031\102\001\002\000\004\007\065\001\002\000\004\023" +
    "\066\001\002\000\010\023\073\053\067\054\070\001\002" +
    "\000\010\023\uff97\053\uff97\054\uff97\001\002\000\010\023" +
    "\uff96\053\uff96\054\uff96\001\002\000\010\023\uff98\053\uff98" +
    "\054\uff98\001\002\000\010\023\077\053\067\054\070\001" +
    "\002\000\004\010\074\001\002\000\004\031\075\001\002" +
    "\000\020\003\uff9b\004\uff9b\013\uff9b\022\uff9b\037\uff9b\052" +
    "\uff9b\053\uff9b\001\002\000\010\023\uff99\053\uff99\054\uff99" +
    "\001\002\000\004\010\100\001\002\000\004\031\101\001" +
    "\002\000\020\003\uff9c\004\uff9c\013\uff9c\022\uff9c\037\uff9c" +
    "\052\uff9c\053\uff9c\001\002\000\020\003\uff9a\004\uff9a\013" +
    "\uff9a\022\uff9a\037\uff9a\052\uff9a\053\uff9a\001\002\000\006" +
    "\053\104\054\105\001\002\000\016\006\334\032\335\033" +
    "\331\034\332\035\337\036\336\001\002\000\016\006\334" +
    "\032\335\033\331\034\332\035\337\036\336\001\002\000" +
    "\004\010\107\001\002\000\004\040\110\001\002\000\012" +
    "\004\115\013\113\037\116\051\114\001\002\000\020\004" +
    "\uffc5\013\uffc5\022\uffc5\037\uffc5\051\uffc5\052\uffc5\053\uffc5" +
    "\001\002\000\012\004\115\013\113\037\116\051\325\001" +
    "\002\000\004\007\253\001\002\000\016\004\115\013\113" +
    "\022\064\037\116\052\242\053\052\001\002\000\004\007" +
    "\144\001\002\000\004\007\117\001\002\000\006\053\104" +
    "\054\105\001\002\000\004\010\121\001\002\000\004\040" +
    "\122\001\002\000\012\004\115\013\113\037\116\051\124" +
    "\001\002\000\012\004\115\013\113\037\116\051\140\001" +
    "\002\000\016\004\115\013\113\022\064\037\116\052\125" +
    "\053\052\001\002\000\020\004\uffa7\013\uffa7\022\uffa7\037" +
    "\uffa7\051\uffa7\052\uffa7\053\uffa7\001\002\000\016\004\115" +
    "\013\113\022\064\037\116\052\135\053\052\001\002\000" +
    "\016\004\115\013\113\022\064\037\116\052\130\053\052" +
    "\001\002\000\020\004\uffa4\013\uffa4\022\uffa4\037\uffa4\051" +
    "\uffa4\052\uffa4\053\uffa4\001\002\000\010\022\064\052\133" +
    "\053\052\001\002\000\020\004\uffc6\013\uffc6\022\uffc6\037" +
    "\uffc6\051\uffc6\052\uffc6\053\uffc6\001\002\000\020\004\uffa9" +
    "\013\uffa9\022\uffa9\037\uffa9\051\uffa9\052\uffa9\053\uffa9\001" +
    "\002\000\020\003\uff9e\004\uff9e\013\uff9e\022\uff9e\037\uff9e" +
    "\052\uff9e\053\uff9e\001\002\000\020\004\uffaa\013\uffaa\022" +
    "\uffaa\037\uffaa\051\uffaa\052\uffaa\053\uffaa\001\002\000\012" +
    "\004\115\013\113\037\116\052\137\001\002\000\020\004" +
    "\uffa8\013\uffa8\022\uffa8\037\uffa8\051\uffa8\052\uffa8\053\uffa8" +
    "\001\002\000\012\004\115\013\113\037\116\052\141\001" +
    "\002\000\020\004\uffa5\013\uffa5\022\uffa5\037\uffa5\051\uffa5" +
    "\052\uffa5\053\uffa5\001\002\000\012\004\115\013\113\037" +
    "\116\052\143\001\002\000\020\004\uffa6\013\uffa6\022\uffa6" +
    "\037\uffa6\051\uffa6\052\uffa6\053\uffa6\001\002\000\006\053" +
    "\104\054\105\001\002\000\004\010\146\001\002\000\004" +
    "\005\147\001\002\000\004\051\150\001\002\000\016\004" +
    "\115\013\113\022\064\037\116\052\151\053\052\001\002" +
    "\000\022\004\uffc3\013\uffc3\022\uffc3\037\uffc3\041\227\051" +
    "\uffc3\052\uffc3\053\uffc3\001\002\000\016\004\115\013\113" +
    "\022\064\037\116\052\176\053\052\001\002\000\016\004" +
    "\115\013\113\022\064\037\116\052\154\053\052\001\002" +
    "\000\022\004\uffc4\013\uffc4\022\uffc4\037\uffc4\041\171\051" +
    "\uffc4\052\uffc4\053\uffc4\001\002\000\010\022\064\052\156" +
    "\053\052\001\002\000\022\004\uffc1\013\uffc1\022\uffc1\037" +
    "\uffc1\041\157\051\uffc1\052\uffc1\053\uffc1\001\002\000\004" +
    "\051\160\001\002\000\016\004\115\013\113\022\064\037" +
    "\116\052\161\053\052\001\002\000\020\004\uffb3\013\uffb3" +
    "\022\uffb3\037\uffb3\051\uffb3\052\uffb3\053\uffb3\001\002\000" +
    "\016\004\115\013\113\022\064\037\116\052\166\053\052" +
    "\001\002\000\014\004\115\013\113\022\064\037\116\053" +
    "\052\001\002\000\010\022\064\052\165\053\052\001\002" +
    "\000\020\004\uffb1\013\uffb1\022\uffb1\037\uffb1\051\uffb1\052" +
    "\uffb1\053\uffb1\001\002\000\020\004\uffb2\013\uffb2\022\uffb2" +
    "\037\uffb2\051\uffb2\052\uffb2\053\uffb2\001\002\000\012\004" +
    "\115\013\113\037\116\052\170\001\002\000\020\004\uffb0" +
    "\013\uffb0\022\uffb0\037\uffb0\051\uffb0\052\uffb0\053\uffb0\001" +
    "\002\000\004\051\172\001\002\000\010\022\064\052\173" +
    "\053\052\001\002\000\020\004\uffb4\013\uffb4\022\uffb4\037" +
    "\uffb4\051\uffb4\052\uffb4\053\uffb4\001\002\000\010\022\064" +
    "\052\175\053\052\001\002\000\020\004\uffba\013\uffba\022" +
    "\uffba\037\uffba\051\uffba\052\uffba\053\uffba\001\002\000\022" +
    "\004\uffc2\013\uffc2\022\uffc2\037\uffc2\041\214\051\uffc2\052" +
    "\uffc2\053\uffc2\001\002\000\012\004\115\013\113\037\116" +
    "\052\200\001\002\000\022\004\uffc0\013\uffc0\022\uffc0\037" +
    "\uffc0\041\201\051\uffc0\052\uffc0\053\uffc0\001\002\000\004" +
    "\051\202\001\002\000\016\004\115\013\113\022\064\037" +
    "\116\052\203\053\052\001\002\000\020\004\uffaf\013\uffaf" +
    "\022\uffaf\037\uffaf\051\uffaf\052\uffaf\053\uffaf\001\002\000" +
    "\016\004\115\013\113\022\064\037\116\052\211\053\052" +
    "\001\002\000\016\004\115\013\113\022\064\037\116\052" +
    "\206\053\052\001\002\000\020\004\uffab\013\uffab\022\uffab" +
    "\037\uffab\051\uffab\052\uffab\053\uffab\001\002\000\010\022" +
    "\064\052\210\053\052\001\002\000\020\004\uffad\013\uffad" +
    "\022\uffad\037\uffad\051\uffad\052\uffad\053\uffad\001\002\000" +
    "\020\004\uffae\013\uffae\022\uffae\037\uffae\051\uffae\052\uffae" +
    "\053\uffae\001\002\000\012\004\115\013\113\037\116\052" +
    "\213\001\002\000\020\004\uffac\013\uffac\022\uffac\037\uffac" +
    "\051\uffac\052\uffac\053\uffac\001\002\000\004\051\215\001" +
    "\002\000\016\004\115\013\113\022\064\037\116\052\216" +
    "\053\052\001\002\000\020\004\uffb9\013\uffb9\022\uffb9\037" +
    "\uffb9\051\uffb9\052\uffb9\053\uffb9\001\002\000\016\004\115" +
    "\013\113\022\064\037\116\052\224\053\052\001\002\000" +
    "\016\004\115\013\113\022\064\037\116\052\221\053\052" +
    "\001\002\000\020\004\uffbb\013\uffbb\022\uffbb\037\uffbb\051" +
    "\uffbb\052\uffbb\053\uffbb\001\002\000\010\022\064\052\223" +
    "\053\052\001\002\000\020\004\uffbd\013\uffbd\022\uffbd\037" +
    "\uffbd\051\uffbd\052\uffbd\053\uffbd\001\002\000\020\004\uffbe" +
    "\013\uffbe\022\uffbe\037\uffbe\051\uffbe\052\uffbe\053\uffbe\001" +
    "\002\000\012\004\115\013\113\037\116\052\226\001\002" +
    "\000\020\004\uffbc\013\uffbc\022\uffbc\037\uffbc\051\uffbc\052" +
    "\uffbc\053\uffbc\001\002\000\004\051\230\001\002\000\016" +
    "\004\115\013\113\022\064\037\116\052\231\053\052\001" +
    "\002\000\020\004\uffbf\013\uffbf\022\uffbf\037\uffbf\051\uffbf" +
    "\052\uffbf\053\uffbf\001\002\000\016\004\115\013\113\022" +
    "\064\037\116\052\237\053\052\001\002\000\016\004\115" +
    "\013\113\022\064\037\116\052\234\053\052\001\002\000" +
    "\020\004\uffb5\013\uffb5\022\uffb5\037\uffb5\051\uffb5\052\uffb5" +
    "\053\uffb5\001\002\000\010\022\064\052\236\053\052\001" +
    "\002\000\020\004\uffb7\013\uffb7\022\uffb7\037\uffb7\051\uffb7" +
    "\052\uffb7\053\uffb7\001\002\000\020\004\uffb8\013\uffb8\022" +
    "\uffb8\037\uffb8\051\uffb8\052\uffb8\053\uffb8\001\002\000\012" +
    "\004\115\013\113\037\116\052\241\001\002\000\020\004" +
    "\uffb6\013\uffb6\022\uffb6\037\uffb6\051\uffb6\052\uffb6\053\uffb6" +
    "\001\002\000\014\003\uffd0\004\uffd0\013\uffd0\037\uffd0\052" +
    "\uffd0\001\002\000\016\004\115\013\113\022\064\037\116" +
    "\052\250\053\052\001\002\000\016\004\115\013\113\022" +
    "\064\037\116\052\245\053\052\001\002\000\014\003\uffcd" +
    "\004\uffcd\013\uffcd\037\uffcd\052\uffcd\001\002\000\010\022" +
    "\064\052\247\053\052\001\002\000\014\003\uffd2\004\uffd2" +
    "\013\uffd2\037\uffd2\052\uffd2\001\002\000\014\003\uffd3\004" +
    "\uffd3\013\uffd3\037\uffd3\052\uffd3\001\002\000\012\004\115" +
    "\013\113\037\116\052\252\001\002\000\014\003\uffd1\004" +
    "\uffd1\013\uffd1\037\uffd1\052\uffd1\001\002\000\004\053\254" +
    "\001\002\000\004\006\323\001\002\000\004\010\310\001" +
    "\002\000\004\031\257\001\002\000\004\053\260\001\002" +
    "\000\012\033\302\034\303\035\306\036\305\001\002\000" +
    "\004\031\262\001\002\000\004\053\263\001\002\000\014" +
    "\006\270\024\272\025\271\026\265\027\266\001\002\000" +
    "\004\010\uff79\001\002\000\004\054\301\001\002\000\004" +
    "\010\uff70\001\002\000\004\010\uff76\001\002\000\004\053" +
    "\274\001\002\000\004\010\uff72\001\002\000\004\054\273" +
    "\001\002\000\004\010\uff73\001\002\000\006\042\275\043" +
    "\276\001\002\000\004\054\300\001\002\000\004\054\277" +
    "\001\002\000\004\010\uff74\001\002\000\004\010\uff75\001" +
    "\002\000\004\010\uff71\001\002\000\004\054\uff7d\001\002" +
    "\000\004\054\uff7c\001\002\000\004\054\307\001\002\000" +
    "\004\054\uff7a\001\002\000\004\054\uff7b\001\002\000\004" +
    "\031\uff77\001\002\000\004\051\311\001\002\000\016\004" +
    "\115\013\113\022\064\037\116\052\312\053\052\001\002" +
    "\000\020\004\uffa0\013\uffa0\022\uffa0\037\uffa0\051\uffa0\052" +
    "\uffa0\053\uffa0\001\002\000\016\004\115\013\113\022\064" +
    "\037\116\052\320\053\052\001\002\000\016\004\115\013" +
    "\113\022\064\037\116\052\315\053\052\001\002\000\020" +
    "\004\uff9f\013\uff9f\022\uff9f\037\uff9f\051\uff9f\052\uff9f\053" +
    "\uff9f\001\002\000\010\022\064\052\317\053\052\001\002" +
    "\000\020\004\uffa2\013\uffa2\022\uffa2\037\uffa2\051\uffa2\052" +
    "\uffa2\053\uffa2\001\002\000\020\004\uffa3\013\uffa3\022\uffa3" +
    "\037\uffa3\051\uffa3\052\uffa3\053\uffa3\001\002\000\012\004" +
    "\115\013\113\037\116\052\322\001\002\000\020\004\uffa1" +
    "\013\uffa1\022\uffa1\037\uffa1\051\uffa1\052\uffa1\053\uffa1\001" +
    "\002\000\004\054\324\001\002\000\004\031\uff78\001\002" +
    "\000\012\004\115\013\113\037\116\052\326\001\002\000" +
    "\014\003\uffce\004\uffce\013\uffce\037\uffce\052\uffce\001\002" +
    "\000\012\004\115\013\113\037\116\052\330\001\002\000" +
    "\014\003\uffcf\004\uffcf\013\uffcf\037\uffcf\052\uffcf\001\002" +
    "\000\006\053\uff82\054\uff82\001\002\000\006\053\uff81\054" +
    "\uff81\001\002\000\006\053\340\054\341\001\002\000\006" +
    "\053\uff7e\054\uff7e\001\002\000\006\053\uff83\054\uff83\001" +
    "\002\000\006\053\uff7f\054\uff7f\001\002\000\006\053\uff80" +
    "\054\uff80\001\002\000\004\010\uff84\001\002\000\004\010" +
    "\uff86\001\002\000\006\053\343\054\344\001\002\000\004" +
    "\010\uff85\001\002\000\004\010\uff87\001\002\000\014\003" +
    "\061\004\055\013\051\037\062\052\347\001\002\000\004" +
    "\002\ufffe\001\002\000\004\002\uffff\001\002\000\014\003" +
    "\uffe7\004\uffe7\013\uffe7\037\uffe7\052\uffe7\001\002\000\006" +
    "\053\104\054\105\001\002\000\004\010\353\001\002\000" +
    "\004\005\354\001\002\000\004\051\355\001\002\000\016" +
    "\004\115\013\113\022\064\037\116\052\356\053\052\001" +
    "\002\000\016\003\uffd4\004\uffd4\013\uffd4\037\uffd4\041\u010f" +
    "\052\uffd4\001\002\000\016\004\115\013\113\022\064\037" +
    "\116\052\u0100\053\052\001\002\000\016\004\115\013\113" +
    "\022\064\037\116\052\361\053\052\001\002\000\016\003" +
    "\uffe2\004\uffe2\013\uffe2\037\uffe2\041\374\052\uffe2\001\002" +
    "\000\010\022\064\052\363\053\052\001\002\000\016\003" +
    "\uffe3\004\uffe3\013\uffe3\037\uffe3\041\364\052\uffe3\001\002" +
    "\000\004\051\365\001\002\000\016\004\115\013\113\022" +
    "\064\037\116\052\366\053\052\001\002\000\014\003\uffdf" +
    "\004\uffdf\013\uffdf\037\uffdf\052\uffdf\001\002\000\010\022" +
    "\064\052\373\053\052\001\002\000\014\004\115\013\113" +
    "\022\064\037\116\053\052\001\002\000\010\022\064\052" +
    "\372\053\052\001\002\000\014\003\uffe0\004\uffe0\013\uffe0" +
    "\037\uffe0\052\uffe0\001\002\000\014\003\uffe1\004\uffe1\013" +
    "\uffe1\037\uffe1\052\uffe1\001\002\000\004\051\375\001\002" +
    "\000\010\004\115\013\113\037\116\001\002\000\012\004" +
    "\115\013\113\037\116\052\377\001\002\000\014\003\uffde" +
    "\004\uffde\013\uffde\037\uffde\052\uffde\001\002\000\016\003" +
    "\uffe5\004\uffe5\013\uffe5\037\uffe5\041\u010a\052\uffe5\001\002" +
    "\000\012\004\115\013\113\037\116\052\u0102\001\002\000" +
    "\016\003\uffe4\004\uffe4\013\uffe4\037\uffe4\041\u0103\052\uffe4" +
    "\001\002\000\004\051\u0104\001\002\000\010\022\064\052" +
    "\u0105\053\052\001\002\000\014\003\uffdc\004\uffdc\013\uffdc" +
    "\037\uffdc\052\uffdc\001\002\000\016\004\115\013\113\022" +
    "\064\037\116\052\u0107\053\052\001\002\000\014\003\uffda" +
    "\004\uffda\013\uffda\037\uffda\052\uffda\001\002\000\012\004" +
    "\115\013\113\037\116\052\u0109\001\002\000\014\003\uffd9" +
    "\004\uffd9\013\uffd9\037\uffd9\052\uffd9\001\002\000\004\051" +
    "\u010b\001\002\000\010\022\064\052\u010c\053\052\001\002" +
    "\000\014\003\uffdd\004\uffdd\013\uffdd\037\uffdd\052\uffdd\001" +
    "\002\000\010\022\064\052\u010e\053\052\001\002\000\014" +
    "\003\uffdb\004\uffdb\013\uffdb\037\uffdb\052\uffdb\001\002\000" +
    "\004\051\u0110\001\002\000\016\004\115\013\113\022\064" +
    "\037\116\052\u0111\053\052\001\002\000\014\003\uffd5\004" +
    "\uffd5\013\uffd5\037\uffd5\052\uffd5\001\002\000\016\004\115" +
    "\013\113\022\064\037\116\052\u0116\053\052\001\002\000" +
    "\014\004\115\013\113\022\064\037\116\053\052\001\002" +
    "\000\010\022\064\052\u0115\053\052\001\002\000\014\003" +
    "\uffd7\004\uffd7\013\uffd7\037\uffd7\052\uffd7\001\002\000\014" +
    "\003\uffd8\004\uffd8\013\uffd8\037\uffd8\052\uffd8\001\002\000" +
    "\012\004\115\013\113\037\116\052\u0118\001\002\000\014" +
    "\003\uffd6\004\uffd6\013\uffd6\037\uffd6\052\uffd6\001\002\000" +
    "\004\002\001\001\002\000\006\053\u011c\054\u011b\001\002" +
    "\000\014\031\uff94\042\u011e\043\u0120\044\u0121\045\u011f\001" +
    "\002\000\014\031\uff95\042\u011e\043\u0120\044\u0121\045\u011f" +
    "\001\002\000\006\053\u0123\054\u0122\001\002\000\006\053" +
    "\uff6f\054\uff6f\001\002\000\006\053\uff6d\054\uff6d\001\002" +
    "\000\006\053\uff6e\054\uff6e\001\002\000\006\053\uff6c\054" +
    "\uff6c\001\002\000\014\031\uff91\042\u011e\043\u0120\044\u0121" +
    "\045\u011f\001\002\000\014\031\uff90\042\u011e\043\u0120\044" +
    "\u0121\045\u011f\001\002\000\006\053\u0128\054\u0129\001\002" +
    "\000\014\031\uff8a\042\uff8a\043\uff8a\044\uff8a\045\uff8a\001" +
    "\002\000\014\031\uff8c\042\u011e\043\u0120\044\u0121\045\u011f" +
    "\001\002\000\014\031\uff8b\042\uff8b\043\uff8b\044\uff8b\045" +
    "\uff8b\001\002\000\014\031\uff88\042\uff88\043\uff88\044\uff88" +
    "\045\uff88\001\002\000\014\031\uff89\042\uff89\043\uff89\044" +
    "\uff89\045\uff89\001\002\000\014\031\uff8d\042\u011e\043\u0120" +
    "\044\u0121\045\u011f\001\002\000\006\053\u012c\054\u012d\001" +
    "\002\000\014\031\uff92\042\u011e\043\u0120\044\u0121\045\u011f" +
    "\001\002\000\014\031\uff93\042\u011e\043\u0120\044\u0121\045" +
    "\u011f\001\002\000\014\031\uff8f\042\u011e\043\u0120\044\u0121" +
    "\045\u011f\001\002\000\014\031\uff8e\042\u011e\043\u0120\044" +
    "\u0121\045\u011f\001\002\000\004\053\254\001\002\000\004" +
    "\010\u0132\001\002\000\004\051\u0133\001\002\000\016\004" +
    "\115\013\113\022\064\037\116\052\u0134\053\052\001\002" +
    "\000\014\003\uffc9\004\uffc9\013\uffc9\037\uffc9\052\uffc9\001" +
    "\002\000\016\004\115\013\113\022\064\037\116\052\u013a" +
    "\053\052\001\002\000\016\004\115\013\113\022\064\037" +
    "\116\052\u0137\053\052\001\002\000\014\003\uffc8\004\uffc8" +
    "\013\uffc8\037\uffc8\052\uffc8\001\002\000\010\022\064\052" +
    "\u0139\053\052\001\002\000\014\003\uffcb\004\uffcb\013\uffcb" +
    "\037\uffcb\052\uffcb\001\002\000\014\003\uffcc\004\uffcc\013" +
    "\uffcc\037\uffcc\052\uffcc\001\002\000\012\004\115\013\113" +
    "\037\116\052\u013c\001\002\000\014\003\uffca\004\uffca\013" +
    "\uffca\037\uffca\052\uffca\001\002\000\006\030\035\031\u013e" +
    "\001\002\000\026\003\ufff4\004\ufff4\013\ufff4\022\ufff4\037" +
    "\ufff4\046\ufff4\047\ufff4\050\ufff4\052\ufff4\053\ufff4\001\002" +
    "\000\006\030\035\031\u0140\001\002\000\026\003\ufff1\004" +
    "\ufff1\013\ufff1\022\ufff1\037\ufff1\046\ufff1\047\ufff1\050\ufff1" +
    "\052\ufff1\053\ufff1\001\002\000\004\036\u0142\001\002\000" +
    "\006\016\u0144\017\u0145\001\002\000\004\012\u0146\001\002" +
    "\000\004\012\uffe9\001\002\000\004\012\uffe8\001\002\000" +
    "\004\011\u0147\001\002\000\004\035\u0148\001\002\000\012" +
    "\003\uffeb\014\uffeb\020\uffeb\021\uffeb\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0146\000\010\011\006\012\003\020\007\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\012\011\026\012\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\030\027\031\030\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\003\053" +
    "\004\052\023\056\024\057\025\062\031\047\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\032\037\033\036\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\033\041\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\032" +
    "\045\033\036\001\001\000\002\001\001\000\004\033\041" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\004\347" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\003" +
    "\344\004\052\024\133\025\062\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\036\071\037\070" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\037\075\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\105\001\001\000\004\006\341\001\001\000" +
    "\004\006\332\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\040\111\041\110\001\001\000\002\001\001\000" +
    "\004\041\131\001\001\000\002\001\001\000\014\023\242" +
    "\024\057\025\062\040\243\041\110\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\117\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\040\122\041\110\001" +
    "\001\000\004\041\131\001\001\000\014\023\125\024\057" +
    "\025\062\040\126\041\110\001\001\000\002\001\001\000" +
    "\012\024\133\025\062\040\135\041\110\001\001\000\012" +
    "\023\130\024\057\025\062\041\131\001\001\000\002\001" +
    "\001\000\006\024\133\025\062\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\041\131\001\001\000\002\001\001\000\006\040\141" +
    "\041\110\001\001\000\002\001\001\000\004\041\131\001" +
    "\001\000\002\001\001\000\004\005\144\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\023" +
    "\151\024\057\025\062\040\152\041\110\001\001\000\002" +
    "\001\001\000\012\024\133\025\062\040\176\041\110\001" +
    "\001\000\012\023\154\024\057\025\062\041\131\001\001" +
    "\000\002\001\001\000\006\024\133\025\062\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\023\161\024\057" +
    "\025\062\040\162\041\110\001\001\000\002\001\001\000" +
    "\012\024\133\025\062\040\166\041\110\001\001\000\012" +
    "\023\163\024\057\025\062\041\131\001\001\000\006\024" +
    "\133\025\062\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\041\131\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\023\173\024\057\025\062\001\001\000\002" +
    "\001\001\000\006\024\133\025\062\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\041\131\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\023\203\024\057\025" +
    "\062\040\204\041\110\001\001\000\002\001\001\000\012" +
    "\024\133\025\062\040\211\041\110\001\001\000\012\023" +
    "\206\024\057\025\062\041\131\001\001\000\002\001\001" +
    "\000\006\024\133\025\062\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\041\131\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\023\216\024\057\025\062\040" +
    "\217\041\110\001\001\000\002\001\001\000\012\024\133" +
    "\025\062\040\224\041\110\001\001\000\012\023\221\024" +
    "\057\025\062\041\131\001\001\000\002\001\001\000\006" +
    "\024\133\025\062\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\041\131\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\023\231\024\057\025\062\040\232\041" +
    "\110\001\001\000\002\001\001\000\012\024\133\025\062" +
    "\040\237\041\110\001\001\000\012\023\234\024\057\025" +
    "\062\041\131\001\001\000\002\001\001\000\006\024\133" +
    "\025\062\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\041\131\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\024\133\025\062\040\250\041\110\001\001\000" +
    "\012\023\245\024\057\025\062\041\131\001\001\000\002" +
    "\001\001\000\006\024\133\025\062\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\041\131\001\001\000\002" +
    "\001\001\000\006\014\254\015\255\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\016\260" +
    "\001\001\000\004\007\303\001\001\000\002\001\001\000" +
    "\004\017\263\001\001\000\004\010\266\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\023\312\024\057\025\062\040" +
    "\313\041\110\001\001\000\002\001\001\000\012\024\133" +
    "\025\062\040\320\041\110\001\001\000\012\023\315\024" +
    "\057\025\062\041\131\001\001\000\002\001\001\000\006" +
    "\024\133\025\062\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\041\131\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\040\326\041\110\001" +
    "\001\000\002\001\001\000\004\041\131\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\004\347\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\351\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\023\356\024" +
    "\057\025\062\040\357\041\110\001\001\000\002\001\001" +
    "\000\012\024\133\025\062\040\u0100\041\110\001\001\000" +
    "\012\023\361\024\057\025\062\041\131\001\001\000\002" +
    "\001\001\000\006\024\133\025\062\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\023\366\024\057\025\062" +
    "\040\367\041\110\001\001\000\002\001\001\000\006\024" +
    "\133\025\062\001\001\000\012\023\370\024\057\025\062" +
    "\041\131\001\001\000\006\024\133\025\062\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\040\375\041\110\001\001\000\004\041\131\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\041\131\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\023\u0105\024" +
    "\057\025\062\001\001\000\002\001\001\000\012\024\133" +
    "\025\062\040\u0107\041\110\001\001\000\002\001\001\000" +
    "\004\041\131\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\023\u010c\024\057\025\062\001\001\000\002\001" +
    "\001\000\006\024\133\025\062\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\023\u0111\024\057\025\062\040" +
    "\u0112\041\110\001\001\000\002\001\001\000\012\024\133" +
    "\025\062\040\u0116\041\110\001\001\000\012\023\u0113\024" +
    "\057\025\062\041\131\001\001\000\006\024\133\025\062" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\041" +
    "\131\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\022\u012a\001\001\000\004\022\u011c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\022\u0123\034" +
    "\u0129\035\u0124\001\001\000\010\022\u0123\034\u0125\035\u0124" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\022" +
    "\u0123\035\u0126\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\022\u0123\035\u0126\001\001\000" +
    "\002\001\001\000\010\022\u0123\034\u012e\035\u0124\001\001" +
    "\000\010\022\u0123\034\u012d\035\u0124\001\001\000\006\022" +
    "\u0123\035\u0126\001\001\000\006\022\u0123\035\u0126\001\001" +
    "\000\006\014\u0130\015\255\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\023\u0134\024\057\025\062\040\u0135" +
    "\041\110\001\001\000\002\001\001\000\012\024\133\025" +
    "\062\040\u013a\041\110\001\001\000\012\023\u0137\024\057" +
    "\025\062\041\131\001\001\000\002\001\001\000\006\024" +
    "\133\025\062\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\041\131\001\001\000\002\001\001\000\006\032" +
    "\u013e\033\036\001\001\000\002\001\001\000\004\033\041" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\013" +
    "\u0142\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	public static void main(String args[]) throws Exception{
		//new parser(new Yylex(new FileInputStream(args[0]))).parse();
		new parser(new Yylex(System.in)).parse();
	}
	public void syntax_error(Symbol s){
		report_error("Error de sintaxis. Linea: " + (s.right + 1) +
		" Columna: " + s.left + ". Texto: \"" + s.value + "\"", null);
	}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // Signo ::= MULTI 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(16/*Signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // Signo ::= ENTRE 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(16/*Signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // Signo ::= MENOS 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(16/*Signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // Signo ::= MAS 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(16/*Signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // Incre ::= MASUNO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*Incre*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // Incre ::= MASNUM NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*Incre*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // Incre ::= MENOSUNO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*Incre*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // Incre ::= MENOSNUM NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(6/*Incre*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // Vfi ::= LETRA IGUAL LETRA MENOS NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*Vfi*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // Vfi ::= LETRA IGUAL LETRA MAS NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*Vfi*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // Vfi ::= LETRA Incre 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(13/*Vfi*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // Con ::= LETRA inte NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(12/*Con*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // Vin ::= LETRA IGUAL NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(11/*Vin*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // ExpresionP ::= Vin PYCOMA Con PYCOMA Vfi 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(10/*ExpresionP*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // inte ::= MENOR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*inte*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // inte ::= MAYOR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*inte*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // inte ::= MENORIGUAL 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*inte*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // inte ::= MAYORIGUAL 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(5/*inte*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // inter ::= IGUAL 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*inter*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // inter ::= MENOR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*inter*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // inter ::= MAYOR 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*inter*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // inter ::= MENORIGUAL 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*inter*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // inter ::= MAYORIGUAL 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*inter*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // inter ::= DIFERENTE 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(4/*inter*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Expresion ::= NUMERO inter LETRA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*Expresion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Expresion ::= LETRA inter LETRA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*Expresion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Expresion ::= NUMERO inter NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*Expresion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Expresion ::= LETRA inter NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(3/*Expresion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // G ::= Signo LETRA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(27/*G*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // G ::= Signo NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(27/*G*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // F ::= G 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(26/*F*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // F ::= F G 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(26/*F*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Var ::= LETRA IGUAL LETRA Signo LETRA F 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Var ::= LETRA IGUAL LETRA Signo NUMERO F 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Var ::= LETRA IGUAL NUMERO Signo LETRA F 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Var ::= LETRA IGUAL NUMERO Signo NUMERO F 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Var ::= LETRA IGUAL LETRA Signo LETRA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Var ::= LETRA IGUAL LETRA Signo NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Var ::= LETRA IGUAL NUMERO Signo LETRA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Var ::= LETRA IGUAL NUMERO Signo NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Var ::= LETRA IGUAL NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Var ::= LETRA IGUAL LETRA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(19/*Var*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // I ::= NUMERO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(29/*I*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // I ::= LETRA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(29/*I*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // HH ::= I 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(28/*HH*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // HH ::= HH I 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(28/*HH*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Instruccion ::= Var PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*Instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Instruccion ::= QILLQAY PARENTI COMIS COMIS PARENTD PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*Instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Instruccion ::= QILLQAY PARENTI COMIS HH COMIS PARENTD PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(18/*Instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Ins ::= Instruccion 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Ins*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Ins ::= Ins Instruccion 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(17/*Ins*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // K ::= PAQ PARENTI ExpresionP PARENTD LLAVEI J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // K ::= PAQ PARENTI ExpresionP PARENTD LLAVEI LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // K ::= PAQ PARENTI ExpresionP PARENTD LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // K ::= PAQ PARENTI ExpresionP PARENTD LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // K ::= PAQ PARENTI ExpresionP PARENTD LLAVEI Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // K ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // K ::= KAMA PARENTI Expresion PARENTD HACER J LLAVEI LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // K ::= KAMA PARENTI Expresion PARENTD HACER J LLAVEI J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // K ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // K ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // K ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // K ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED SINO LLAVEI J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED SINO LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED SINO LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED SINO LLAVEI Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED SINO LLAVEI LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J Ins LLAVED SINO LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J Ins LLAVED SINO LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J Ins LLAVED SINO LLAVEI Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J Ins LLAVED SINO LLAVEI LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J LLAVED SINO LLAVEI LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED SINO LLAVEI J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED SINO LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED SINO LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED SINO LLAVEI Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins LLAVED SINO LLAVEI LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J LLAVED SINO LLAVEI Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins LLAVED SINO LLAVEI J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins LLAVED SINO LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins LLAVED SINO LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins LLAVED SINO LLAVEI Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED SINO LLAVEI LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // K ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J LLAVED 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(31/*K*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // J ::= K 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(30/*J*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // J ::= J K 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(30/*J*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Sentencia ::= error 
            {
              Object RESULT = null;
		 System.out.println("Error sintactico en la sentencia"); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Sentencia ::= PAQ PARENTI ExpresionP PARENTD LLAVEI J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Sentencia ::= PAQ PARENTI ExpresionP PARENTD LLAVEI LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Sentencia ::= PAQ PARENTI ExpresionP PARENTD LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Sentencia ::= PAQ PARENTI ExpresionP PARENTD LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Sentencia ::= PAQ PARENTI ExpresionP PARENTD LLAVEI Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Sentencia ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Sentencia ::= KAMA PARENTI Expresion PARENTD HACER J LLAVEI LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Sentencia ::= KAMA PARENTI Expresion PARENTD HACER J LLAVEI J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Sentencia ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Sentencia ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Sentencia ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Sentencia ::= KAMA PARENTI Expresion PARENTD HACER LLAVEI Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED SINO LLAVEI LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED SINO LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED SINO LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI LLAVED SINO LLAVEI Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED SINO LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED SINO LLAVEI Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins LLAVED SINO LLAVEI Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED SINO LLAVEI LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins LLAVED SINO LLAVEI LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J LLAVED SINO LLAVEI J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J Ins LLAVED SINO LLAVEI LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J Ins LLAVED SINO LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J Ins LLAVED SINO LLAVEI Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI J Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins J LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Sentencia ::= ARI PARENTI Expresion PARENTD HINAQA LLAVEI Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(2/*Sentencia*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Lista ::= Sentencia 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(1/*Lista*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Lista ::= Lista Sentencia 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(1/*Lista*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Expresion1 ::= STDIO 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(9/*Expresion1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Expresion1 ::= IOSTREAM 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(9/*Expresion1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Cabecera ::= error 
            {
              Object RESULT = null;
		 System.out.println("Error sintactico en la sentencia"); 
              CUP$parser$result = new java_cup.runtime.Symbol(8/*Cabecera*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Cabecera ::= CAB INCLUIR MENOR Expresion1 PUNTO H MAYOR 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(8/*Cabecera*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Regla ::= Cabecera 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(7/*Regla*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Regla ::= Regla Cabecera 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(7/*Regla*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // E ::= COMA LETRA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(25/*E*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // D ::= E 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*D*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // D ::= D E 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(24/*D*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // C ::= REAL LETRA D PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*C*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // C ::= ENTERO LETRA D PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*C*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // C ::= CADENA LETRA D PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*C*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // C ::= REAL LETRA PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*C*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // C ::= ENTERO LETRA PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*C*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // C ::= CADENA LETRA PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(23/*C*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Tvar ::= C 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(22/*Tvar*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Tvar ::= Tvar C 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(22/*Tvar*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // A ::= VOID PARENTI PARENTD PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(20/*A*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // A ::= MAIN PARENTI PARENTD PYCOMA 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(20/*A*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Sin ::= error 
            {
              Object RESULT = null;
		 System.out.println("Error sintactico en la sentencia"); 
              CUP$parser$result = new java_cup.runtime.Symbol(14/*Sin*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Sin ::= Regla A LLAVEI Tvar LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(14/*Sin*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Sin ::= Regla A LLAVEI LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(14/*Sin*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Sin ::= Regla A LLAVEI Tvar Ins LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(14/*Sin*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Sin ::= Regla A LLAVEI Tvar Ins Lista LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(14/*Sin*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Sin EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Sin ::= Regla A LLAVEI Tvar Lista LLAVED 
            {
              Object RESULT = null;
		 System.out.println("Sentencia analizada correctamente. Sin errores."); 
              CUP$parser$result = new java_cup.runtime.Symbol(14/*Sin*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

